// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  role          ROLE?     @default(USER)

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  TestHistory TestHistory[]
}

enum ROLE {
  ADMIN
  INSTRUCTOR
  USER
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Test {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String        @unique // Tiêu đề bài thi
  skill       Skill // Kỹ năng (Listening, Reading, Writing, Speaking)
  sections    Section[] // Các phần của bài thi
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  TestHistory TestHistory[]
}

model Section {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  sectionTitle String // Tiêu đề phần
  description  String? // Miêu tả của từng phần
  audioURL     String? // URL file audio cho phần này (nếu có, cho Listening)
  imgUrl       String?
  passage      String? // Đoạn văn đề bài của phần Reading
  questions    Question[] // Các câu hỏi thuộc phần này
  testId       String     @db.ObjectId
  test         Test       @relation(fields: [testId], references: [id], onDelete: Cascade)
}

model Question {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  questionTitle String? // VD: Questions 1-10, 11-20
  description   String? // VD: Choose ONE WORD AND/OR A NUMBER from the passage for each answer. Write your answers in boxes 21-26 on your answer sheet.
  questionNum   Int
  questionText  String // Đề bài
  type          QuestionType
  answer        Json
  correctAnswer String
  sectionId     String       @db.ObjectId
  section       Section      @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  Blank         Blank[]
}

model Blank {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  questionId  String   @db.ObjectId
  placeholder String // Ký hiệu cho chỗ trống
  options     Json // Mảng các từ gợi ý cho chỗ trống
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

enum Skill {
  LISTENING
  READING
  WRITING
  SPEAKING
}

enum QuestionType {
  FILL_IN_THE_BLANK
  MULTIPLE_CHOICE
  SHORT_ANSWER
}

//Test history
model TestHistory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  testId      String   @db.ObjectId
  userAnswers Json
  score       Float?
  createdAt   DateTime @default(now())
  skill       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  test Test @relation(fields: [testId], references: [id], onDelete: Cascade)
}

//Tips for practicing Ielts
model IeltsTips {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  skill       Skill
  title       String
  description String?
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
